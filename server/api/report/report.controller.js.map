{"version":3,"sources":["api/report/report.controller.js"],"names":["index","show","create","update","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","extend","save","then","handleEntityNotFound","end","handleError","err","console","log","message","send","req","find","exec","catch","findById","params","id","body","_id"],"mappings":"AAAA;;;;;;;;;AASA;;;;;QAwDgBA,K,GAAAA,K;QAOAC,I,GAAAA,I;QAQAC,M,GAAAA,M;QAQAC,M,GAAAA,M;;AA7EhB;;;;AACA;;;;;;AAEA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1CA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAIA,MAAJ,EAAY;AACVF,UAAIG,MAAJ,CAAWF,UAAX,EAAuBG,IAAvB,CAA4BF,MAA5B;AACD;AACF,GAJD;AAKD;;AAED,SAASG,WAAT,CAAqBC,OAArB,EAA8B;AAC5B,SAAO,UAASJ,MAAT,EAAiB;AACtB;AACC,QAAIK,UAAU,iBAAEC,MAAF,CAASN,MAAT,EAAiBI,OAAjB,CAAd,CAFqB,CAEoB;AAC1C,WAAOC,QAAQE,IAAR,GACJC,IADI,CACC,mBAAW;AACf,aAAOH,OAAP;AACD,KAHI,CAAP;AAID,GAPD;AAQD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,oBAAT,CAA8BX,GAA9B,EAAmC;AACjC,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAI,CAACA,MAAL,EAAa;AACXF,UAAIG,MAAJ,CAAW,GAAX,EAAgBS,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAOV,MAAP;AACD,GAND;AAOD;;AAED,SAASW,WAAT,CAAqBb,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASa,GAAT,EAAc;AACnBC,YAAQC,GAAR,CAAYF,IAAIG,OAAhB;AACAjB,QAAIG,MAAJ,CAAWF,UAAX,EAAuBiB,IAAvB,CAA4BJ,GAA5B;AAED,GAJD;AAKD;;AAED;AACO,SAASnB,KAAT,CAAewB,GAAf,EAAoBnB,GAApB,EAAyB;AAC9B,SAAO,iBAAOoB,IAAP,GAAcC,IAAd,GACJX,IADI,CACCX,kBAAkBC,GAAlB,CADD,EAEJsB,KAFI,CAEET,YAAYb,GAAZ,CAFF,CAAP;AAGD;AACD;AACA;AACO,SAASJ,IAAT,CAAcuB,GAAd,EAAmBnB,GAAnB,EAAwB;AAC7B,SAAO,iBAAOuB,QAAP,CAAgBJ,IAAIK,MAAJ,CAAWC,EAA3B,EAA+BJ,IAA/B,GACJX,IADI,CACCC,qBAAqBX,GAArB,CADD,EAEJU,IAFI,CAECX,kBAAkBC,GAAlB,CAFD,EAGJsB,KAHI,CAGET,YAAYb,GAAZ,CAHF,CAAP;AAID;AACD;AACA;AACO,SAASH,MAAT,CAAgBsB,GAAhB,EAAqBnB,GAArB,EAA0B;AAC/Be,UAAQC,GAAR,CAAY,mBAAZ;AACA,SAAO,iBAAOnB,MAAP,CAAcsB,IAAIO,IAAlB,EACJhB,IADI,CACCX,kBAAkBC,GAAlB,EAAuB,GAAvB,CADD,EAEJsB,KAFI,CAEET,YAAYb,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASF,MAAT,CAAgBqB,GAAhB,EAAqBnB,GAArB,EAA0B;AAC/B,MAAImB,IAAIO,IAAJ,CAASC,GAAb,EAAkB;AAChB,WAAOR,IAAIO,IAAJ,CAASC,GAAhB;AACD;AACD,SAAO,iBAAOJ,QAAP,CAAgBJ,IAAIK,MAAJ,CAAWC,EAA3B,EAA+BJ,IAA/B,GACJX,IADI,CACCC,qBAAqBX,GAArB,CADD,EAEJU,IAFI,CAECL,YAAYc,IAAIO,IAAhB,CAFD,EAGJhB,IAHI,CAGCX,kBAAkBC,GAAlB,CAHD,EAIJsB,KAJI,CAIET,YAAYb,GAAZ,CAJF,CAAP;AAKD","file":"report.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/Report              ->  index\n * POST    /api/Report              ->  create\n * GET     /api/Report/:id          ->  show\n * PUT     /api/Report/:id          ->  update\n * DELETE  /api/Report/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Report from './report.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    // var updated = _.merge(entity, updates);\n     var updated = _.extend(entity, updates); //new changed line\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\n// function removeEntity(res) {\n//   return function(entity) {\n//     if (entity) {\n//       return entity.remove()\n//         .then(() => {\n//           res.status(204).end();\n//         });\n//     }\n//   };\n// }\n//\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    console.log(err.message);\n    res.status(statusCode).send(err)\n\n  };\n}\n\n// Gets a list of Report\nexport function index(req, res) {\n  return Report.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n//\n// Gets a single Report from the DB\nexport function show(req, res) {\n  return Report.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n//\n// Creates a new Report in the DB\nexport function create(req, res) {\n  console.log('in create line 79');\n  return Report.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// // Updates an existing Report in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Report.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n"]}